Code:
module ram(data_out,data_in,clk,wr_enb,rd_enb,rst,rd_addr,wr_addr);
parameter ram_width=8;
parameter ram_depth=256;
parameter addr_size=8;
input clk,rst,wr_enb,rd_enb;
input[ram_width-1:0] data_in;
input[addr_size-1:0] rd_addr,wr_addr;
output reg[ram_width-1:0] data_out;
reg[ram_width-1:0]mem[ram_depth-1:0];
integer i;
always@(posedge clk)
begin
if(rst)
begin
for(i=0;i<ram_depth;i=i+1)
mem[i]<=0;
data_out<=0;
end
else
begin
if(wr_enb)
mem[wr_addr]<=data_in;
if(rd_enb)
data_out<=mem[rd_addr];
end
end
endmodule


Testbench:
module ram_TB();
reg clk,wr_enb,rd_enb,rst;
reg [7:0] rd_addr,wr_addr,data_in;
wire [7:0]data_out;
integer i;
ram AA(.data_out(data_out),.data_in(data_in),.clk(clk),.wr_enb(wr_enb),.rd_enb(rd_enb),.rst(rst),.rd_addr(rd_addr),.wr_addr(wr_addr));
always
#5 clk=~clk;
initial begin
clk=1;
data_in=0;
wr_enb=0;
rd_enb=0;
rst=0;
wr_addr=0;
rd_addr=0;
#20;
wr_enb=1;
rd_enb=0;
for(i=1;i<=8;i=i+1)
begin
data_in=i;
wr_addr=i-1;
#10;
end
rd_enb=1;
wr_enb=0;
for(i=1;i<=8;i=i+1)
begin
rd_addr=i-1;
#10;
end
end
endmodule
